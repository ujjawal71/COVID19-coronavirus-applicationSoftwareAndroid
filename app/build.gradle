// Manifest version information!
def versionMajor = 1
def versionMinor = 2
def versionPatch = 4
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: 'dependencies.gradle'
apply from: 'variants.gradle'

def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

android {
    compileSdkVersion compileSdk
    defaultConfig {
        applicationId "com.csecoder.covid19"

        minSdkVersion minSdk
        targetSdkVersion targetSdk

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
        exclude 'META-INF/main.kotlin_module'
    }

    bundle {
        language {

            enableSplit = false
        }
    }

    dexOptions {
        preDexLibraries = preDexEnabled
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    dataBinding {
        enabled = true
    }

    lintOptions {
        lintConfig file('../analysis/lint/lint.xml')
        htmlOutput file("$project.buildDir/reports/lint/lint-reports.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-reports.xml")
        abortOnError false
    }
}

// Required for annotation processing plugins like Dagger
kapt {
    generateStubs = true
}